PFRING = fun(CONFIG) -> case os:getenv("PFRING") of
    false ->
        ok;
    Value ->
        case filelib:is_dir(Value) of
            true ->
                LDFLAGS = os:getenv("EPCAP_LDFLAGS", ""),
                os:putenv("EPCAP_LDFLAGS",
                        string:join([LDFLAGS, "-L", Value], " "));
            _ ->
                ok
        end
    end,
    CONFIG
end,
Pcap_create = fun(CONFIG) ->
    Check = "
#include <pcap.h>
int main(int argc, char *argv[])
{
    char errbuf[PCAP_ERRBUF_SIZE];
    (void)pcap_create(NULL, errbuf);
    return 0;
}",
    ok = file:write_file("test_pcap_create.c", Check),
    Retval = os:cmd("cc -o /dev/null test_pcap_create.c -lpcap > /dev/null 2>&1; printf \"%d\" $?"),
    file:delete("test_pcap_create.c"),
    case Retval of
        "0" ->
            CFLAGS = os:getenv("EPCAP_CFLAGS", ""),
            os:putenv("EPCAP_CFLAGS", CFLAGS ++ " -DHAVE_PCAP_CREATE");
        _ ->
            ok
    end,
    CONFIG
end,
lists:foldl(fun(Fun, Cfg) ->
        Fun(Cfg)
    end,
    CONFIG,
    [PFRING, Pcap_create]
    ).
